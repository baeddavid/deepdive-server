# Generated by Django 4.2.4 on 2024-07-07 20:11

import deepdive.models
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="DeepDiveUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(max_length=255, unique=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Database",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "database_type",
                    models.CharField(
                        choices=[
                            ("sqlite", "SQLite"),
                            ("snowflake", "Snowflake"),
                            ("bigquery", "BigQuery"),
                            ("mysql", "MySQL"),
                            ("csv", "CSV"),
                            ("excel", "Excel"),
                            ("parquet", "Parquet"),
                        ],
                        max_length=10,
                    ),
                ),
                ("name", models.CharField(max_length=512)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("schema", models.TextField()),
                (
                    "starter_questions",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), blank=True, null=True, size=10
                    ),
                ),
                ("username", models.CharField(blank=True, max_length=512, null=True)),
                ("password", models.CharField(blank=True, max_length=512, null=True)),
                (
                    "snowflake_account",
                    models.CharField(blank=True, max_length=512, null=True),
                ),
                (
                    "snowflake_database",
                    models.CharField(blank=True, max_length=512, null=True),
                ),
                (
                    "snowflake_schema",
                    models.CharField(blank=True, max_length=512, null=True),
                ),
                (
                    "bigquery_dataset_id",
                    models.CharField(blank=True, max_length=512, null=True),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Session",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=512)),
                (
                    "tables",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=512), size=10
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "database",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="deepdive.database",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SharedDatabase",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "database_type",
                    models.CharField(
                        choices=[
                            ("sqlite", "SQLite"),
                            ("snowflake", "Snowflake"),
                            ("bigquery", "BigQuery"),
                            ("mysql", "MySQL"),
                            ("csv", "CSV"),
                            ("excel", "Excel"),
                            ("parquet", "Parquet"),
                        ],
                        max_length=10,
                    ),
                ),
                ("name", models.CharField(max_length=512)),
                ("timestamp", models.DateTimeField()),
                ("schema", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="SharedSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=512)),
                (
                    "tables",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=512), size=10
                    ),
                ),
                (
                    "database",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="deepdive.shareddatabase",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UnparsedQuery",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("query", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Visualization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.TextField()),
                ("question", models.TextField()),
                ("sql_query", models.TextField()),
                ("data", models.TextField()),
                ("visualization_spec", models.TextField()),
                ("error_message", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="visualizations",
                        to="deepdive.session",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SharedVisualization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.TextField()),
                ("question", models.TextField()),
                ("sql_query", models.TextField()),
                ("data", models.TextField()),
                ("visualization_spec", models.TextField()),
                ("error_message", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="visualizations",
                        to="deepdive.sharedsession",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SharedMessage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "message_type",
                    models.CharField(
                        choices=[("Q", "Question"), ("R", "Response")],
                        default="Q",
                        max_length=1,
                    ),
                ),
                ("question", models.TextField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("sql_query", models.TextField(blank=True, null=True)),
                ("data", models.TextField(blank=True, null=True)),
                ("visualization_spec", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="deepdive.sharedsession",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "message_type",
                    models.CharField(
                        choices=[("Q", "Question"), ("R", "Response")],
                        default="Q",
                        max_length=1,
                    ),
                ),
                ("question", models.TextField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("sql_query", models.TextField(blank=True, null=True)),
                ("data", models.TextField(blank=True, null=True)),
                ("visualization_spec", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="deepdive.session",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DatabaseFile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("file", models.FileField(upload_to=deepdive.models.get_upload_path)),
                ("configs", models.JSONField(blank=True, null=True)),
                (
                    "database",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="deepdive.database",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
